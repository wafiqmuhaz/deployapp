{"version":3,"file":"firebase-firestore-lite.js","sources":["../util/src/crypt.ts","../util/src/defaults.ts","../util/src/environment.ts","../util/src/errors.ts","../util/src/obj.ts","../util/src/compat.ts","../logger/src/logger.ts","../firestore/dist/lite/index.browser.esm2017.js","../util/src/emulator.ts","../component/src/component.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  const match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined =>\n  getDefaultsFromGlobal() ||\n  getDefaultsFromEnvVariable() ||\n  getDefaultsFromCookie();\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.12.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction _(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function g(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw _(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function I(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const T = \"ok\", A = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", N = \"not-found\", D = \"already-exists\", $ = \"permission-denied\", x = \"unauthenticated\", F = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class Q {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class G {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class W {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new W(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass J {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass X {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new X(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof X && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass Z {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === Z.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof Z ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends Z {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends Z {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return _(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return T;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return x;\n\n      case 403:\n        // Forbidden\n        return $;\n\n      case 404:\n        // Not Found\n        return N;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return F;\n\n      case 499:\n        // Client Closed Request\n        return A;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? T : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    I(t, e, n, r, s) {\n        const i = this.T(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.A(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw g(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.I(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    A(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    N(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new U(mt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new U(mt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction yt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _t {\n    static D() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = yt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction gt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function vt(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass bt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return bt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return bt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new bt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? gt(this.nanoseconds, t.nanoseconds) : gt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class Et {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new Et(t);\n    }\n    static min() {\n        return new Et(new bt(0, 0));\n    }\n    static max() {\n        return new Et(new bt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function It(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Tt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass At {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || Pt.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new At(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, Pt.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new At(this.comparator, this.root.remove(t, this.comparator).copy(null, null, Pt.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new Rt(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new Rt(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new Rt(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new Rt(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass Rt {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass Pt {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : Pt.RED, this.left = null != r ? r : Pt.EMPTY, \n        this.right = null != s ? s : Pt.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new Pt(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return Pt.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return Pt.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, Pt.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, Pt.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPt.EMPTY = null, Pt.RED = !0, Pt.BLACK = !1;\n\n// end LLRBEmptyNode\nPt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new Pt(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Vt {\n    constructor(t) {\n        this.comparator = t, this.data = new At(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Nt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Nt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Vt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Vt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Nt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Dt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new Dt([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Vt(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Dt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return vt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass $t {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new $t(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new $t(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return gt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\n$t.EMPTY_BYTE_STRING = new $t(\"\");\n\nconst xt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Ft(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = xt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: St(t.seconds),\n        nanos: St(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function St(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function qt(t) {\n    return \"string\" == typeof t ? $t.fromBase64String(t) : $t.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Ot(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function kt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Ot(e) ? kt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ct(t) {\n    const e = Ft(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new bt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Lt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Mt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Ot(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ut(t, e) {\n    if (t === e) return !0;\n    const n = Mt(t);\n    if (n !== Mt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ct(t).isEqual(Ct(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Ft(t.timestampValue), r = Ft(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return qt(t.bytesValue).isEqual(qt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return St(t.geoPointValue.latitude) === St(e.geoPointValue.latitude) && St(t.geoPointValue.longitude) === St(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return St(t.integerValue) === St(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = St(t.doubleValue), r = St(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return vt(t.arrayValue.values || [], e.arrayValue.values || [], Ut);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (It(n) !== It(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ut(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction jt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ut(t, e)));\n}\n\nfunction Bt(t, e) {\n    if (t === e) return 0;\n    const n = Mt(t), r = Mt(e);\n    if (n !== r) return gt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return gt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = St(t.integerValue || t.doubleValue), r = St(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Qt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Qt(Ct(t), Ct(e));\n\n      case 5 /* StringValue */ :\n        return gt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = qt(t), r = qt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = gt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return gt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = gt(St(t.latitude), St(e.latitude));\n            if (0 !== n) return n;\n            return gt(St(t.longitude), St(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Bt(n[t], r[t]);\n                if (e) return e;\n            }\n            return gt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === Lt && e === Lt) return 0;\n            if (t === Lt) return 1;\n            if (e === Lt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = gt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Bt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return gt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Qt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return gt(t, e);\n    const n = Ft(t), r = Ft(e), s = gt(n.seconds, r.seconds);\n    return 0 !== s ? s : gt(n.nanos, r.nanos);\n}\n\nfunction zt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Gt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Wt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Kt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Yt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Ht(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Tt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Ht(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Ht(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Jt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Jt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Yt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Ht(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Ht(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Yt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ut(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Yt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Tt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Jt(Ht(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Xt {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Xt(t, 0 /* INVALID */ , Et.min(), Et.min(), Jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Xt(t, 1 /* FOUND_DOCUMENT */ , e, Et.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Xt(t, 2 /* NO_DOCUMENT */ , e, Et.min(), Jt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Xt(t, 3 /* UNKNOWN_DOCUMENT */ , e, Et.min(), Jt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Jt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Jt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = Et.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Xt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Xt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Zt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.$ = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function te(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Zt(t, e, n, r, s, i, o);\n}\n\nclass ee extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.F(t, e, n) : new ne(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new oe(t, n) : \"in\" /* IN */ === e ? new ue(t, n) : \"not-in\" /* NOT_IN */ === e ? new ce(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ae(t, n) : new ee(t, e, n);\n    }\n    static F(t, e, n) {\n        return \"in\" /* IN */ === e ? new re(t, n) : new se(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.S(Bt(e, this.value)) : null !== e && Mt(this.value) === Mt(e) && this.S(Bt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    S(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    q() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass ne extends ee {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.S(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class re extends ee {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = ie(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class se extends ee {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = ie(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction ie(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class oe extends ee {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Gt(e) && jt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ue extends ee {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && jt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ce extends ee {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (jt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !jt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ae extends ee {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Gt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => jt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class he {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class le {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction fe(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction de(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ut(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class we {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.O = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.k = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function me(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction pe(t) {\n    for (const e of t.filters) if (e.q()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction ye(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function _e(t) {\n    const e = I(t);\n    if (null === e.O) {\n        e.O = [];\n        const t = pe(e), n = me(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.O.push(new le(t)), e.O.push(new le(nt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.O.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.O.push(new le(nt.keyField(), t));\n            }\n        }\n    }\n    return e.O;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ge(t) {\n    const e = I(t);\n    if (!e.k) if (\"F\" /* First */ === e.limitType) e.k = te(e.path, e.collectionGroup, _e(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of _e(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new le(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new he(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new he(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.k = te(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.k;\n}\n\nfunction ve(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!fe(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Ut(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!de(t.startAt, e.startAt) && de(t.endAt, e.endAt);\n    }(ge(t), ge(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction be(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.C) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Ee {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Ie extends Ee {}\n\n/** Transforms an array value via a union operation. */ class Te extends Ee {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Ae extends Ee {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Re extends Ee {\n    constructor(t, e) {\n        super(), this.L = t, this.M = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Pe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Ve {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Ve;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Ve(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Ve(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ne {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class De extends Ne {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class $e extends Ne {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class xe extends Ne {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Fe extends Ne {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Se = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), qe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Oe {\n    constructor(t, e) {\n        this.databaseId = t, this.C = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction ke(t, e) {\n    if (t.C) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ce(t, e) {\n    return t.C ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Le(t, e) {\n    return ke(t, e.toTimestamp());\n}\n\nfunction Me(t) {\n    return E(!!t), Et.fromTimestamp(function(t) {\n        const e = Ft(t);\n        return new bt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Ue(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction je(t, e) {\n    return Ue(t.databaseId, e.path);\n}\n\nfunction Be(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(tn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Qe(t, e) {\n    return Ue(t.databaseId, e);\n}\n\nfunction ze(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Ge(t, e, n) {\n    return {\n        name: je(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction We(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Be(t, e.found.name), r = Me(e.found.updateTime), s = new Jt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Xt.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Be(t, e.missing), r = Me(e.readTime);\n        return Xt.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction Ke(t, e) {\n    let n;\n    if (e instanceof De) n = {\n        update: Ge(t, e.key, e.value)\n    }; else if (e instanceof xe) n = {\n        delete: je(t, e.key)\n    }; else if (e instanceof $e) n = {\n        update: Ge(t, e.key, e.data),\n        updateMask: Ze(e.fieldMask)\n    }; else {\n        if (!(e instanceof Fe)) return b();\n        n = {\n            verify: je(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ae) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Re) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.M\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Le(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction Ye(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Qe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Qe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Kt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Kt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: Xe(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Xe(t.field),\n                    op: Je(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Xe(t.field),\n                direction: He(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.C || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction He(t) {\n    return Se[t];\n}\n\n// visible for testing\nfunction Je(t) {\n    return qe[t];\n}\n\nfunction Xe(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Ze(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction tn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function en(t) {\n    return new Oe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass nn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.U = t, this.timerId = e, this.j = n, this.B = r, this.G = s, this.W = 0, this.K = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.Y = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    H() {\n        this.W = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.X()), n = Math.max(0, Date.now() - this.Y), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.K = this.U.enqueueAfterDelay(this.timerId, r, (() => (this.Y = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.B, this.W < this.j && (this.W = this.j), this.W > this.G && (this.W = this.G);\n    }\n    Z() {\n        null !== this.K && (this.K.skipDelay(), this.K = null);\n    }\n    cancel() {\n        null !== this.K && (this.K.cancel(), this.K = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass rn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.tt = n, this.L = r, \n        this.et = !1;\n    }\n    nt() {\n        if (this.et) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    I(t, e, n) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.tt.I(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.tt.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === x && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.et = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function sn(t, e) {\n    const n = I(t), r = ze(n.L) + \"/documents\", s = {\n        writes: e.map((t => Ke(n.L, t)))\n    };\n    await n.I(\"Commit\", r, s);\n}\n\nasync function on(t, e) {\n    const n = I(t), r = ze(n.L) + \"/documents\", s = {\n        documents: e.map((t => je(n.L, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = We(n.L, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function un(t, e) {\n    const n = I(t), r = Ye(n.L, ge(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Be(t, e.name), s = Me(e.updateTime), i = new Jt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Xt.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.L, t.document, void 0)));\n}\n\nasync function cn(t, e) {\n    const n = I(t), r = function(t, e) {\n        const n = Ye(t, e);\n        return {\n            structuredAggregationQuery: {\n                aggregations: [ {\n                    count: {},\n                    alias: \"count_alias\"\n                } ],\n                structuredQuery: n.structuredQuery\n            },\n            parent: n.parent\n        };\n    }(n.L, ge(e)), s = r.parent;\n    n.tt.v || delete r.parent;\n    return (await n.P(\"RunAggregationQuery\", s, r, /*expectedResponseCount=*/ 1)).filter((t => !!t.result)).map((t => t.result.aggregateFields));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const an = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction hn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!an.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new J(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = en(t._databaseId), u = function(t, e, n, r) {\n            return new rn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        an.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return an.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass ln {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class fn {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new ln({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new ln(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new Q;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = an.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), an.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction dn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction wn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && mn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function mn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, fn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && g(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new z(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function pn(t) {\n    return t = ct(t, fn), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass yn {\n    constructor() {\n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class _n {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._data = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._data;\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * CountQueryRunner encapsulates the logic needed to run the count aggregation\n * queries.\n */ class gn {\n    constructor(t, e, n) {\n        this.query = t, this.datastore = e, this.userDataWriter = n;\n    }\n    run() {\n        return cn(this.datastore, this.query._query).then((t => {\n            E(void 0 !== t[0]);\n            const e = Object.entries(t[0]).filter((([t, e]) => \"count_alias\" === t)).map((([t, e]) => this.userDataWriter.convertValue(e)))[0];\n            return E(\"number\" == typeof e), Promise.resolve(new _n(this.query, {\n                count: e\n            }));\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class vn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new En(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new vn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class bn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new bn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class En extends bn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new we(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new vn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new En(this.firestore, t, this._path);\n    }\n}\n\nfunction In(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof fn) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new En(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new En(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Tn(t, e) {\n    if (t = ct(t, fn), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new bn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new we(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction An(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = _t.D()), st(\"doc\", \"path\", e), t instanceof fn) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new vn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof vn || t instanceof En)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new vn(t.firestore, t instanceof En ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Rn(t, e) {\n    return t = l(t), e = l(e), (t instanceof vn || t instanceof En) && (e instanceof vn || e instanceof En) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Pn(t, e) {\n    return t = l(t), e = l(e), t instanceof bn && e instanceof bn && (t.firestore === e.firestore && ve(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Vn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Vn($t.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Vn($t.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Nn {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Dn() {\n    return new Nn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class $n {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class xn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return gt(this._lat, t._lat) || gt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Fn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Sn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new $e(t, this.data, this.fieldMask, e, this.fieldTransforms) : new De(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class qn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new $e(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction On(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class kn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.L = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.rt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get st() {\n        return this.settings.st;\n    }\n    /** Returns a new context with the specified settings overwritten. */    it(t) {\n        return new kn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.L, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.ct(t), r;\n    }\n    at(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.rt(), r;\n    }\n    ht(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.it({\n            path: void 0,\n            ut: !0\n        });\n    }\n    lt(t) {\n        return rr(t, this.settings.methodName, this.settings.ft || !1, this.path, this.settings.dt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    rt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ct(this.path.get(t));\n    }\n    ct(t) {\n        if (0 === t.length) throw this.lt(\"Document fields must not be empty\");\n        if (On(this.st) && Fn.test(t)) throw this.lt('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Cn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.L = n || en(t);\n    }\n    /** Creates a new top-level parse context. */    wt(t, e, n, r = !1) {\n        return new kn({\n            st: t,\n            methodName: e,\n            dt: n,\n            path: nt.emptyPath(),\n            ut: !1,\n            ft: r\n        }, this.databaseId, this.L, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Ln(t) {\n    const e = t._freezeSettings(), n = en(t._databaseId);\n    return new Cn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Mn(t, e, n, r, s, i = {}) {\n    const o = t.wt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Zn(\"Data must be an object, but it was:\", o, r);\n    const u = Jn(r, o);\n    let c, a;\n    if (i.merge) c = new Dt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = tr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            sr(t, s) || t.push(s);\n        }\n        c = new Dt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Sn(new Jt(u), c, a);\n}\n\nclass Un extends $n {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.st) throw 1 /* Update */ === t.st ? t.lt(`${this._methodName}() can only appear at the top level of your update data`) : t.lt(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Un;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function jn(t, e, n) {\n    return new kn({\n        st: 3 /* Argument */ ,\n        dt: e.settings.dt,\n        methodName: t._methodName,\n        ut: n\n    }, e.databaseId, e.L, e.ignoreUndefinedProperties);\n}\n\nclass Bn extends $n {\n    _toFieldTransform(t) {\n        return new Pe(t.path, new Ie);\n    }\n    isEqual(t) {\n        return t instanceof Bn;\n    }\n}\n\nclass Qn extends $n {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => Hn(t, e))), r = new Te(n);\n        return new Pe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass zn extends $n {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => Hn(t, e))), r = new Ae(n);\n        return new Pe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Gn extends $n {\n    constructor(t, e) {\n        super(t), this._t = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Re(t.L, be(t.L, this._t));\n        return new Pe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Wn(t, e, n, r) {\n    const s = t.wt(1 /* Update */ , e, n);\n    Zn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Jt.empty();\n    Tt(r, ((t, r) => {\n        const u = nr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.at(u);\n        if (r instanceof Un) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Hn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Dt(i);\n    return new qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Kn(t, e, n, r, s, i) {\n    const o = t.wt(1 /* Update */ , e, n), u = [ tr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(tr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = Jt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!sr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.at(e);\n        if (n instanceof Un) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = Hn(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new Dt(a);\n    return new qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Yn(t, e, n, r = !1) {\n    return Hn(n, t.wt(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Hn(t, e) {\n    if (Xn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return Zn(\"Unsupported field value:\", e, t), Jn(t, e);\n    if (t instanceof $n) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!On(e.st)) throw e.lt(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.lt(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ut && 4 /* ArrayArgument */ !== e.st) throw e.lt(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Hn(s, e.ht(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return be(e.L, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = bt.fromDate(t);\n            return {\n                timestampValue: ke(e.L, n)\n            };\n        }\n        if (t instanceof bt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new bt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: ke(e.L, n)\n            };\n        }\n        if (t instanceof xn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Vn) return {\n            bytesValue: Ce(e.L, t._byteString)\n        };\n        if (t instanceof vn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.lt(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Ue(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.lt(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Jn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Tt(t, ((t, r) => {\n        const s = Hn(r, e.ot(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Xn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof bt || t instanceof xn || t instanceof Vn || t instanceof vn || t instanceof $n);\n}\n\nfunction Zn(t, e, n) {\n    if (!Xn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.lt(t + \" a custom object\") : e.lt(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function tr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Nn) return e._internalPath;\n    if (\"string\" == typeof e) return nr(t, e);\n    throw rr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const er = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function nr(t, e, n) {\n    if (e.search(er) >= 0) throw rr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Nn(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw rr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction rr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function sr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class ir {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new vn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new or(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(ar(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class or extends ir {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class ur {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function cr(t, e) {\n    return t = l(t), e = l(e), t instanceof ir && e instanceof ir ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof ur && e instanceof ur && (Pn(t.query, e.query) && vt(t.docs, e.docs, cr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function ar(t, e) {\n    return \"string\" == typeof e ? nr(t, e) : e instanceof Nn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass hr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function lr(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass fr extends hr {\n    constructor(t, e, n) {\n        super(), this.gt = t, this.vt = e, this.bt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Ln(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    Pr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Rr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Rr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || Pr(o, i), \n            u = Yn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = ee.create(s, i, u);\n            return function(t, e) {\n                if (e.q()) {\n                    const n = pe(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = me(t);\n                    null !== r && Vr(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this.gt, this.vt, this.bt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function dr(t, e, n) {\n    const r = e, s = ar(\"where\", t);\n    return new fr(s, r, n);\n}\n\nclass wr extends hr {\n    constructor(t, e) {\n        super(), this.gt = t, this.Et = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new le(e, n);\n            return function(t, e) {\n                if (null === me(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = pe(t);\n                    null !== n && Vr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.gt, this.Et);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new we(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function mr(t, e = \"asc\") {\n    const n = e, r = ar(\"orderBy\", t);\n    return new wr(r, n);\n}\n\nclass pr extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.Tt = n;\n    }\n    _apply(t) {\n        return new bn(t.firestore, t.converter, function(t, e, n) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.It, this.Tt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function yr(t) {\n    return at(\"limit\", t), new pr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function _r(t) {\n    return at(\"limitToLast\", t), new pr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass gr extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.At = e, this.Rt = n;\n    }\n    _apply(t) {\n        const e = Ar(t, this.type, this.At, this.Rt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction vr(...t) {\n    return new gr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction br(...t) {\n    return new gr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass Er extends hr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.At = e, this.Rt = n;\n    }\n    _apply(t) {\n        const e = Ar(t, this.type, this.At, this.Rt);\n        return new bn(t.firestore, t.converter, function(t, e) {\n            return new we(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Ir(...t) {\n    return new Er(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Tr(...t) {\n    return new Er(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Ar(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof ir) return function(t, e, n, r, s) {\n        if (!r) throw new U(N, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of _e(t)) if (n.field.isKeyField()) i.push(zt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (Ot(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new he(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Ln(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!ye(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(zt(e, s));\n                } else {\n                    const t = Yn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new he(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Rr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!ye(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return zt(t, new rt(r));\n    }\n    if (n instanceof vn) return zt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Pr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(P, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Vr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Nr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Dr extends class {\n    convertValue(t, e = \"none\") {\n        switch (Mt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return St(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(qt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Tt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new xn(St(t.latitude), St(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = kt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ct(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Ft(t);\n        return new bt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(tn(n));\n        const r = new X(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        _(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Vn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new vn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function $r(t) {\n    const e = hn((t = ct(t, vn)).firestore), n = new Dr(t.firestore);\n    return on(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new ir(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function xr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, bn))._query);\n    const e = hn(t.firestore), n = new Dr(t.firestore);\n    return un(e, t._query).then((e => {\n        const r = e.map((e => new or(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new ur(t, r);\n    }));\n}\n\nfunction Fr(t, e, n) {\n    const r = Nr((t = ct(t, vn)).converter, e, n), s = Mn(Ln(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return sn(hn(t.firestore), [ s.toMutation(t._key, Ve.none()) ]);\n}\n\nfunction Sr(t, e, n, ...r) {\n    const s = Ln((t = ct(t, vn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(s, \"updateDoc\", t._key, e, n, r) : Wn(s, \"updateDoc\", t._key, e);\n    return sn(hn(t.firestore), [ i.toMutation(t._key, Ve.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function qr(t) {\n    return sn(hn((t = ct(t, vn)).firestore), [ new xe(t._key, Ve.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Or(t, e) {\n    const n = An(t = ct(t, En)), r = Nr(t.converter, e), s = Mn(Ln(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return sn(hn(t.firestore), [ s.toMutation(n._key, Ve.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function kr(t) {\n    const e = ct(t.firestore, fn), n = hn(e), r = new Dr(e);\n    return new gn(t, n, r).run();\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function Cr(t, e) {\n    return Pn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Lr() {\n    return new Un(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Mr() {\n    return new Bn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Ur(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Qn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function jr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new zn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Br(t) {\n    return new Gn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Qr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Ln(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = zr(t, this._firestore), s = Nr(r.converter, e, n), i = Mn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Ve.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = zr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Wn(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Ve.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = zr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new xe(e._key, Ve.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction zr(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Gr(t) {\n    const e = hn(t = ct(t, fn));\n    return new Qr(t, (t => sn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Wr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await on(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new xe(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Fe(n, this.precondition(n)));\n        })), await sn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = Et.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(Et.min()) ? Ve.exists(!1) : Ve.updateTime(e) : Ve.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(Et.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Ve.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Ve.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Kr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Yr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Pt = n.maxAttempts, this.Vt = new nn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Pt -= 1, this.Nt();\n    }\n    Nt() {\n        this.Vt.J((async () => {\n            const t = new Wr(this.datastore), e = this.Dt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.$t(t);\n                }))));\n            })).catch((t => {\n                this.$t(t);\n            }));\n        }));\n    }\n    Dt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    $t(t) {\n        this.Pt > 0 && this.xt(t) ? (this.Pt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Nt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    xt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case A:\n                  case R:\n                  case V:\n                  case F:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case x:\n                    return !1;\n\n                  case P:\n                  case N:\n                  case D:\n                  case $:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function Hr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Jr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Jr(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(A, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Xr {\n    constructor() {\n        // The last promise in the queue.\n        this.Ft = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.St = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.qt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Ot = [], \n        // visible for testing\n        this.kt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Ct = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Lt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Mt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Vt = new nn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Ut = () => {\n            const t = Hr();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Vt.Z();\n        };\n        const t = Hr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ut);\n    }\n    get isShuttingDown() {\n        return this.qt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.jt(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Bt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.qt) {\n            this.qt = !0, this.Lt = t || !1;\n            const e = Hr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Ut);\n        }\n    }\n    enqueue(t) {\n        if (this.jt(), this.qt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.Bt((() => this.qt && this.Lt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.St.push(t), this.Qt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Qt() {\n        if (0 !== this.St.length) {\n            try {\n                await this.St[0](), this.St.shift(), this.Vt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.St.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Vt.J((() => this.Qt()));\n        }\n    }\n    Bt(t) {\n        const e = this.Ft.then((() => (this.Ct = !0, t().catch((t => {\n            this.kt = t, this.Ct = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw _(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Ct = !1, t))))));\n        return this.Ft = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.jt(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Mt.indexOf(t) > -1 && (e = 0);\n        const r = Jr.createAndSchedule(this, t, e, n, (t => this.zt(t)));\n        return this.Ot.push(r), r;\n    }\n    jt() {\n        this.kt && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Gt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Ft, await t;\n        } while (t !== this.Ft);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Wt(t) {\n        for (const e of this.Ot) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Kt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Gt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Ot.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Ot) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Gt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Yt(t) {\n        this.Mt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    zt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Ot.indexOf(t);\n        this.Ot.splice(e, 1);\n    }\n}\n\nclass Zr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Ln(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = zr(t, this._firestore), n = new Dr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new ir(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new ir(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = zr(t, this._firestore), s = Nr(r.converter, e, n), i = Mn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = zr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Nn ? Kn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Wn(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = zr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function ts(t, e, n) {\n    const r = hn(t = ct(t, fn)), s = Object.assign(Object.assign({}, Kr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new Yr(new Xr, r, s, (n => e(new Zr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new fn(new G(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new X(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.7.0\", \"\"), r(\"firestore-lite\", \"3.7.0\", \"__BUILD_TARGET__\");\n\nexport { yn as AggregateField, _n as AggregateQuerySnapshot, Vn as Bytes, En as CollectionReference, vn as DocumentReference, ir as DocumentSnapshot, Nn as FieldPath, $n as FieldValue, fn as Firestore, U as FirestoreError, xn as GeoPoint, bn as Query, hr as QueryConstraint, or as QueryDocumentSnapshot, ur as QuerySnapshot, bt as Timestamp, Zr as Transaction, Qr as WriteBatch, Or as addDoc, Cr as aggregateQuerySnapshotEqual, jr as arrayRemove, Ur as arrayUnion, In as collection, Tn as collectionGroup, mn as connectFirestoreEmulator, qr as deleteDoc, Lr as deleteField, An as doc, Dn as documentId, Tr as endAt, Ir as endBefore, kr as getCount, $r as getDoc, xr as getDocs, wn as getFirestore, Br as increment, dn as initializeFirestore, yr as limit, _r as limitToLast, mr as orderBy, lr as query, Pn as queryEqual, Rn as refEqual, ts as runTransaction, Mr as serverTimestamp, Fr as setDoc, p as setLogLevel, cr as snapshotEqual, br as startAfter, vr as startAt, pn as terminate, Sr as updateDoc, dr as where, Gr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromCookie","document","match","cookie","decoded","e","console","error","base64Decode","JSON","parse","getDefaults","process","env","defaultsJsonString","getDefaultsFromEnvVariable","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","FirebaseError","constructor","code","message","customData","super","name","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","value","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","getModularInstance","_delegate","LogLevel","levelStringToEnum","debug","DEBUG","verbose","VERBOSE","info","INFO","warn","WARN","ERROR","silent","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","args","logLevel","now","Date","toISOString","method","d","t","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","w","m","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","log","y","n","map","v","g","stringify","E","I","A","R","P","V","N","$","x","F","S","q","O","C","L","U","toString","j","promise","Promise","resolve","reject","B","user","type","headers","Map","set","Q","getToken","invalidateToken","start","enqueueRetryable","shutdown","z","token","changeListener","G","auth","onInit","then","accessToken","getUid","W","r","o","h","l","getAuthHeaderValueForFirstParty","K","Y","H","appCheck","J","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","X","projectId","database","static","isDefaultDatabase","Z","segments","offset","len","comparator","child","slice","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","tt","canonicalString","indexOf","split","filter","et","nt","test","isValidIdentifier","isKeyField","rt","path","fromString","emptyPath","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","st","it","isDocumentKey","ot","ut","ct","at","ht","lt","ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","dt","wt","mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","pt","databaseInfo","T","async","body","status","statusText","ok","json","yt","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","_t","gt","vt","every","bt","seconds","nanoseconds","fromMillis","getTime","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","Et","timestamp","compareTo","toMicroseconds","toTimestamp","It","hasOwnProperty","call","Tt","At","root","Pt","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","Rt","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","Vt","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","Nt","add","delete","unionWith","iter","Dt","fields","sort","covers","$t","binaryString","Symbol","iterator","next","done","toBase64","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","xt","RegExp","Ft","exec","substr","Number","nanos","St","qt","fromBase64String","fromUint8Array","Ot","mapValue","__type__","stringValue","kt","__previous_value__","Ct","__local_write_time__","timestampValue","Lt","Mt","Ut","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","jt","find","Bt","Qt","zt","Gt","Wt","Kt","Yt","Ht","assign","Jt","field","getFieldsMap","setAll","applyChanges","clone","Xt","documentType","version","readTime","documentState","empty","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Zt","orderBy","filters","startAt","endAt","te","ee","op","ne","oe","ue","ce","ae","re","se","matches","fromName","ie","some","nullValue","he","position","inclusive","le","dir","fe","de","we","explicitOrderBy","limitType","me","pe","ye","_e","keyField","ge","be","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Ee","Ie","Te","elements","Ae","Re","M","Pe","transform","Ve","updateTime","exists","isNone","Ne","De","precondition","fieldTransforms","getFieldMask","$e","fieldMask","xe","Fe","Se","asc","desc","qe","in","Oe","ke","Ce","Le","Me","fromTimestamp","Ue","je","Be","tn","Qe","ze","Ge","Ye","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","Xe","fieldFilter","Je","compositeFilter","where","direction","He","before","fieldPath","Ze","fieldPaths","en","nn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","rn","authCredentials","appCheckCredentials","all","catch","terminate","sn","writes","update","updateMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","Ke","on","documents","found","newFoundDocument","missing","newNoDocument","We","an","hn","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","ln","credentials","ignoreUndefinedProperties","cacheSizeBytes","fn","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","dn","_getProvider","isInitialized","initialize","instanceIdentifier","wn","getImmediate","identifier","mn","mockUserToken","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","pn","yn","_n","_data","query","gn","datastore","userDataWriter","run","structuredAggregationQuery","aggregations","count","alias","result","aggregateFields","cn","_query","entries","convertValue","vn","converter","_key","firestore","_path","id","En","withConverter","bn","In","Tn","An","arguments","D","Rn","Pn","ve","Vn","_byteString","Nn","_internalPath","Dn","$n","_methodName","xn","isFinite","_lat","_long","Fn","Sn","toMutation","qn","On","kn","rr","methodName","contains","Cn","Ln","Mn","merge","mergeFields","Zn","Jn","tr","sr","Un","_toFieldTransform","jn","Bn","Qn","Hn","zn","Gn","Wn","nr","Kn","f","Yn","Xn","fromDate","getPrototypeOf","er","search","ir","_firestore","_userDataWriter","_document","_converter","ref","or","fromFirestore","ar","ur","_docs","docs","cr","hr","lr","_apply","fr","Pr","Rr","Vr","concat","dr","wr","mr","pr","yr","_r","gr","Ar","vr","br","Er","Ir","Tr","Nr","toFirestore","Dr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","$r","xr","un","reverse","Fr","none","Sr","qr","Or","kr","Cr","Lr","Mr","Ur","jr","Br","Qr","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","zr","commit","Gr","Wr","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","Kr","maxAttempts","Yr","asyncQueue","updateFunction","deferred","enqueueAndForget","Hr","Jr","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","Xr","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","enterRestrictedMode","removeEventListener","shift","stack","createAndSchedule","verifyOperationInProgress","splice","Zr","_transaction","lookup","ts","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","getProvider","apply"],"mappings":"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","preExistingComment":"firebase-firestore-lite.js.map"}